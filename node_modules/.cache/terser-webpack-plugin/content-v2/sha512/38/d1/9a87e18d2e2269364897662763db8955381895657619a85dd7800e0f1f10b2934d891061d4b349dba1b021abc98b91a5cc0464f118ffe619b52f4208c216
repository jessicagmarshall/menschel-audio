{"map":"{\"version\":3,\"sources\":[\"/Users/jessicamarshall/Desktop/menschel-fe/src/components/Main.js\",\"/Users/jessicamarshall/Desktop/menschel-fe/src/App.js\",\"/Users/jessicamarshall/Desktop/menschel-fe/src/serviceWorker.js\",\"/Users/jessicamarshall/Desktop/menschel-fe/src/index.js\"],\"names\":[\"data\",\"columns\",\"Header\",\"accessor\",\"Main\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"rowContent\",\"input\",\"output\",\"id\",\"audio\",\"paused\",\"injectThProps\",\"bind\",\"assertThisInitialized\",\"generateSet\",\"togglePaused\",\"nextRow\",\"undefined\",\"getRandomInt\",\"length\",\"setState\",\"rowIndex\",\"audioUrl\",\"min\",\"max\",\"Math\",\"ceil\",\"floor\",\"random\",\"outputTag\",\"console\",\"log\",\"rowInfo\",\"column\",\"style\",\"display\",\"_this2\",\"react_default\",\"a\",\"createElement\",\"lib_default\",\"url\",\"playStatus\",\"Sound\",\"status\",\"PAUSED\",\"PLAYING\",\"onFinishedPlaying\",\"es\",\"showPagination\",\"sortable\",\"loadingText\",\"defaultPageSize\",\"getTdProps\",\"instance\",\"onClick\",\"e\",\"handleOriginal\",\"index\",\"background\",\"getTheadThProps\",\"minRows\",\"position\",\"width\",\"backgroundColor\",\"bottom\",\"height\",\"Component\",\"App\",\"components_Main\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react'\\nimport ReactTable from 'react-table'\\nimport Sound from 'react-sound'\\nimport 'react-table/react-table.css'\\nimport datasheet from '../data/data'\\n\\nconst data = datasheet\\n\\nconst columns = [{\\n  Header: 'Input Tag',\\n  accessor: 'input'\\n}, {\\n  Header: 'Output Tag',\\n  accessor: 'output'\\n}, {\\n  Header: 'Audio ID',\\n  accessor: 'audio'\\n}]\\n\\nclass Main extends Component {\\n  constructor () {\\n    super()\\n    this.state = {\\n      rowContent: {input: '', output: '', id: ''},\\n      audio: '',\\n      paused: false\\n    }\\n    this.injectThProps = this.injectThProps.bind(this)\\n    this.generateSet = this.generateSet.bind(this)\\n    this.togglePaused = this.togglePaused.bind(this)\\n  }\\n\\n  componentWillMount () {\\n    this.generateSet()\\n  }\\n\\n  generateSet (input) {\\n    let nextRow\\n    input === undefined\\n      ? nextRow = this.getRandomInt(0, data.length)\\n      : nextRow = input\\n    this.setState({rowIndex: nextRow,\\n      rowContent: {input: data[nextRow].input, output: data[nextRow].output, id: data[nextRow].audio},\\n      audioUrl: 'http://localhost:3003/audio?id=' + nextRow\\n    })\\n  }\\n\\n  getRandomInt (min, max) {\\n    min = Math.ceil(min)\\n    max = Math.floor(max)\\n    return Math.floor(Math.random() * (max - min)) + min\\n  }\\n\\n  getNextIndex () {\\n    let outputTag = this.state.rowContent.output\\n    console.log(outputTag)\\n  }\\n\\n  injectThProps (state, rowInfo, column) {\\n    return {\\n      style: { display: 'none' }\\n    }\\n  }\\n\\n  togglePaused () {\\n    this.state.paused\\n      ? this.setState({paused: false})\\n      : this.setState({paused: true})\\n  }\\n\\n  render () {\\n    return (\\n      <div>\\n        <Sound url={this.state.audioUrl}\\n          playStatus={this.state.paused ? Sound.status.PAUSED : Sound.status.PLAYING}\\n          onFinishedPlaying={this.generateSet}\\n        />\\n        <ReactTable\\n          data={data}\\n          columns={columns}\\n          showPagination={false}\\n          sortable={false}\\n          loadingText={null}\\n          defaultPageSize={data.length + 2}\\n          getTdProps={(state, rowInfo, column, instance) => {\\n            if (typeof rowInfo !== 'undefined') {\\n              return {\\n                onClick: (e, handleOriginal) => {\\n                  this.generateSet(rowInfo.index)\\n                },\\n                style: {\\n                  background: rowInfo.index === this.state.rowIndex ? 'yellow' : 'white'\\n                }\\n              }\\n            } else {\\n              return {}\\n            }\\n          }}\\n        />\\n        <ReactTable\\n          data={[{\\n            input: this.state.rowContent.input,\\n            output: this.state.rowContent.output,\\n            audio: this.state.rowContent.id\\n          }]}\\n          columns={columns}\\n          getTheadThProps={this.injectThProps}\\n          showPagination={false}\\n          sortable={false}\\n          minRows={1}\\n          loadingText={null}\\n          style={{position: 'fixed', width: '100%', backgroundColor: 'yellow', bottom: 0, height: 60}}\\n          getTdProps={(state, rowInfo, column, instance) => {\\n            return {\\n              onClick: (e, handleOriginal) => {\\n                this.togglePaused()\\n              }\\n            }\\n          }}\\n        />\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default Main\\n\",\"import React, { Component } from 'react'\\nimport Main from './components/Main'\\n\\nclass App extends Component {\\n  render () {\\n    return (\\n      <Main />\\n    )\\n  }\\n}\\n\\nexport default App\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{13:function(t){t.exports=[{input:5,output:0,audio:\"quBjcCbP\"},{input:2,output:4,audio:\"QxEXVDuc\"},{input:5,output:4,audio:\"xPpUCJMr\"},{input:4,output:3,audio:\"WQQinmTA\"},{input:4,output:2,audio:\"bTXTRaLM\"},{input:5,output:1,audio:\"QXdVDtha\"},{input:0,output:1,audio:\"JoldxLRP\"},{input:1,output:4,audio:\"xCWLxhyw\"},{input:1,output:0,audio:\"pGQxbaeL\"},{input:4,output:1,audio:\"unhusRMP\"},{input:4,output:1,audio:\"MqhjcvME\"},{input:2,output:4,audio:\"IVPULtSY\"},{input:3,output:1,audio:\"BGJSjYqt\"},{input:0,output:1,audio:\"dbaIdXuF\"},{input:5,output:2,audio:\"JDHuhubs\"},{input:5,output:0,audio:\"OMgXoDEm\"},{input:5,output:2,audio:\"llWWvsIS\"},{input:1,output:3,audio:\"iEBGdRFP\"},{input:1,output:3,audio:\"ZbvModGd\"},{input:0,output:4,audio:\"UjSHMOOi\"},{input:4,output:2,audio:\"RmvPzVmD\"},{input:5,output:3,audio:\"MTNOAnsL\"}]},14:function(t,e,u){t.exports=u(27)},19:function(t,e,u){},27:function(t,e,u){\"use strict\";u.r(e);var n=u(1),o=u.n(n),a=u(12),i=u.n(a),d=(u(19),u(4)),s=u(5),r=u(7),p=u(6),c=u(8),l=u(3),h=u(10),g=u(9),b=u.n(g),w=(u(25),u(13)),f=[{Header:\"Input Tag\",accessor:\"input\"},{Header:\"Output Tag\",accessor:\"output\"},{Header:\"Audio ID\",accessor:\"audio\"}],m=function(t){function e(){var t;return Object(d.a)(this,e),(t=Object(r.a)(this,Object(p.a)(e).call(this))).state={rowContent:{input:\"\",output:\"\",id:\"\"},audio:\"\",paused:!1},t.injectThProps=t.injectThProps.bind(Object(l.a)(Object(l.a)(t))),t.generateSet=t.generateSet.bind(Object(l.a)(Object(l.a)(t))),t.togglePaused=t.togglePaused.bind(Object(l.a)(Object(l.a)(t))),t}return Object(c.a)(e,t),Object(s.a)(e,[{key:\"componentWillMount\",value:function(){this.generateSet()}},{key:\"generateSet\",value:function(t){var e;e=void 0===t?this.getRandomInt(0,w.length):t,this.setState({rowIndex:e,rowContent:{input:w[e].input,output:w[e].output,id:w[e].audio},audioUrl:\"http://localhost:3003/audio?id=\"+e})}},{key:\"getRandomInt\",value:function(t,e){return t=Math.ceil(t),e=Math.floor(e),Math.floor(Math.random()*(e-t))+t}},{key:\"getNextIndex\",value:function(){var t=this.state.rowContent.output;console.log(t)}},{key:\"injectThProps\",value:function(t,e,u){return{style:{display:\"none\"}}}},{key:\"togglePaused\",value:function(){this.state.paused?this.setState({paused:!1}):this.setState({paused:!0})}},{key:\"render\",value:function(){var t=this;return o.a.createElement(\"div\",null,o.a.createElement(b.a,{url:this.state.audioUrl,playStatus:this.state.paused?b.a.status.PAUSED:b.a.status.PLAYING,onFinishedPlaying:this.generateSet}),o.a.createElement(h.a,{data:w,columns:f,showPagination:!1,sortable:!1,loadingText:null,defaultPageSize:w.length+2,getTdProps:function(e,u,n,o){return\"undefined\"!==typeof u?{onClick:function(e,n){t.generateSet(u.index)},style:{background:u.index===t.state.rowIndex?\"yellow\":\"white\"}}:{}}}),o.a.createElement(h.a,{data:[{input:this.state.rowContent.input,output:this.state.rowContent.output,audio:this.state.rowContent.id}],columns:f,getTheadThProps:this.injectThProps,showPagination:!1,sortable:!1,minRows:1,loadingText:null,style:{position:\"fixed\",width:\"100%\",backgroundColor:\"yellow\",bottom:0,height:60},getTdProps:function(e,u,n,o){return{onClick:function(e,u){t.togglePaused()}}}}))}}]),e}(n.Component),j=function(t){function e(){return Object(d.a)(this,e),Object(r.a)(this,Object(p.a)(e).apply(this,arguments))}return Object(c.a)(e,t),Object(s.a)(e,[{key:\"render\",value:function(){return o.a.createElement(m,null)}}]),e}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(o.a.createElement(j,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(t){t.unregister()})}},[[14,2,1]]]);","extractedComments":[]}