{"ast":null,"code":"import _classCallCheck from \"/Users/jessicamarshall/Desktop/menschel-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jessicamarshall/Desktop/menschel-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jessicamarshall/Desktop/menschel-fe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jessicamarshall/Desktop/menschel-fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jessicamarshall/Desktop/menschel-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jessicamarshall/Desktop/menschel-fe/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jessicamarshall/Desktop/menschel-fe/src/components/Main.js\";\n\n/* global fetch */\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport Sound from 'react-sound';\nimport 'react-table/react-table.css';\nimport data from '../data/data';\nvar columns = [{\n  Header: 'Input Tag',\n  accessor: 'input'\n}, {\n  Header: 'Output Tag',\n  accessor: 'output'\n}, {\n  Header: 'Audio ID',\n  accessor: 'audio'\n}];\n\nvar Main =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Main, _Component);\n\n  function Main() {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this));\n    _this.state = {\n      rowContent: {\n        input: '',\n        output: '',\n        id: ''\n      },\n      audio: '',\n      paused: false,\n      tagList: [0, 1, 2, 3, 4, 5],\n      // eventually replace this with yonatan's actual tags\n      flashing: false,\n      // is this the last n seconds of the clip?\n      rowBlue: false,\n      flashingTime: 1 // how many seconds before the end should the bottom bar begin flashing\n\n    };\n    _this.injectThProps = _this.injectThProps.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.generateSet = _this.generateSet.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.togglePaused = _this.togglePaused.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.generateSet();\n    }\n  }, {\n    key: \"generateSet\",\n    value: function generateSet(input) {\n      var _this2 = this;\n\n      var nextRow;\n      input === undefined ? nextRow = this.getNextIndex() : nextRow = input;\n      fetch('http://localhost:3003/audioDuration?id=' + nextRow).then(function (res) {\n        res.json().then(function (res) {\n          _this2.setState({\n            duration: res.duration,\n            rowIndex: nextRow,\n            rowContent: {\n              input: data[nextRow].input,\n              output: data[nextRow].output,\n              id: data[nextRow].audio\n            },\n            audioUrl: 'http://localhost:3003/audio?id=' + nextRow\n          });\n        });\n      });\n      setTimeout(function () {\n        return console.log('1 second later');\n      }, 1000 * (this.state.duration - 1)); // change\n    }\n  }, {\n    key: \"getNextIndex\",\n    value: function getNextIndex() {\n      var indexArray = [];\n      var outputTag;\n      this.state.rowContent.output === '' ? outputTag = this.state.tagList[this.getRandomInt(0, this.state.tagList.length)] : outputTag = this.state.rowContent.output;\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].input === outputTag) {\n          indexArray.push(i);\n        }\n      }\n\n      var nextIndex = this.getRandomInt(0, indexArray.length);\n      return indexArray[nextIndex];\n    }\n  }, {\n    key: \"getRandomInt\",\n    value: function getRandomInt(min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n  }, {\n    key: \"injectThProps\",\n    value: function injectThProps(state, rowInfo, column) {\n      return {\n        style: {\n          display: 'none'\n        }\n      };\n    }\n  }, {\n    key: \"togglePaused\",\n    value: function togglePaused() {\n      this.state.paused ? this.setState({\n        paused: false\n      }) : this.setState({\n        paused: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Sound, {\n        url: this.state.audioUrl || '',\n        playStatus: this.state.paused ? Sound.status.PAUSED : Sound.status.PLAYING,\n        onFinishedPlaying: this.generateSet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(ReactTable, {\n        data: data,\n        columns: columns,\n        showPagination: false,\n        sortable: false,\n        loadingText: null,\n        defaultPageSize: data.length + 2,\n        getTdProps: function getTdProps(state, rowInfo, column, instance) {\n          if (typeof rowInfo !== 'undefined') {\n            return {\n              onClick: function onClick(e, handleOriginal) {\n                _this3.generateSet(rowInfo.index);\n              },\n              style: {\n                background: rowInfo.index !== _this3.state.rowIndex ? 'white' : _this3.state.flashing && _this3.state.rowBlue ? 'blue' : 'yellow'\n              }\n            };\n          } else {\n            return {};\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(ReactTable, {\n        data: [{\n          input: this.state.rowContent.input,\n          output: this.state.rowContent.output,\n          audio: this.state.rowContent.id\n        }],\n        columns: columns,\n        getTheadThProps: this.injectThProps,\n        showPagination: false,\n        sortable: false,\n        minRows: 1,\n        loadingText: null,\n        style: {\n          position: 'fixed',\n          width: '100%',\n          backgroundColor: this.state.flashing && this.state.rowBlue ? 'blue' : 'yellow',\n          bottom: 0,\n          height: 60\n        },\n        getTdProps: function getTdProps(state, rowInfo, column, instance) {\n          return {\n            onClick: function onClick(e, handleOriginal) {\n              _this3.togglePaused();\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport default Main;","map":{"version":3,"sources":["/Users/jessicamarshall/Desktop/menschel-fe/src/components/Main.js"],"names":["React","Component","ReactTable","Sound","data","columns","Header","accessor","Main","state","rowContent","input","output","id","audio","paused","tagList","flashing","rowBlue","flashingTime","injectThProps","bind","generateSet","togglePaused","nextRow","undefined","getNextIndex","fetch","then","res","json","setState","duration","rowIndex","audioUrl","setTimeout","console","log","indexArray","outputTag","getRandomInt","length","i","push","nextIndex","min","max","Math","ceil","floor","random","rowInfo","column","style","display","status","PAUSED","PLAYING","instance","onClick","e","handleOriginal","index","background","position","width","backgroundColor","bottom","height"],"mappings":";;;;;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,6BAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,IAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,MAAM,EAAE,WADO;AAEfC,EAAAA,QAAQ,EAAE;AAFK,CAAD,EAGb;AACDD,EAAAA,MAAM,EAAE,YADP;AAEDC,EAAAA,QAAQ,EAAE;AAFT,CAHa,EAMb;AACDD,EAAAA,MAAM,EAAE,UADP;AAEDC,EAAAA,QAAQ,EAAE;AAFT,CANa,CAAhB;;IAWMC,I;;;;;AACJ,kBAAe;AAAA;;AAAA;;AACb;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AAACC,QAAAA,KAAK,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,EAAE,EAAE;AAA5B,OADD;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,MAAM,EAAE,KAHG;AAIXC,MAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAJE;AAIkB;AAC7BC,MAAAA,QAAQ,EAAE,KALC;AAKM;AACjBC,MAAAA,OAAO,EAAE,KANE;AAOXC,MAAAA,YAAY,EAAE,CAPH,CAOK;;AAPL,KAAb;AASA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,uDAArB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,uDAApB;AAba;AAcd;;;;yCAEqB;AACpB,WAAKC,WAAL;AACD;;;gCAEYX,K,EAAO;AAAA;;AAClB,UAAIa,OAAJ;AACAb,MAAAA,KAAK,KAAKc,SAAV,GACID,OAAO,GAAG,KAAKE,YAAL,EADd,GAEIF,OAAO,GAAGb,KAFd;AAGAgB,MAAAA,KAAK,CAAC,4CAA4CH,OAA7C,CAAL,CACGI,IADH,CACQ,UAAAC,GAAG,EAAI;AACXA,QAAAA,GAAG,CAACC,IAAJ,GACGF,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,UAAA,MAAI,CAACE,QAAL,CAAc;AACZC,YAAAA,QAAQ,EAAEH,GAAG,CAACG,QADF;AAEZC,YAAAA,QAAQ,EAAET,OAFE;AAGZd,YAAAA,UAAU,EAAE;AAACC,cAAAA,KAAK,EAAEP,IAAI,CAACoB,OAAD,CAAJ,CAAcb,KAAtB;AAA6BC,cAAAA,MAAM,EAAER,IAAI,CAACoB,OAAD,CAAJ,CAAcZ,MAAnD;AAA2DC,cAAAA,EAAE,EAAET,IAAI,CAACoB,OAAD,CAAJ,CAAcV;AAA7E,aAHA;AAIZoB,YAAAA,QAAQ,EAAE,oCAAoCV;AAJlC,WAAd;AAMD,SARH;AASD,OAXH;AAYAW,MAAAA,UAAU,CAAC;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAAA,OAAD,EAAsC,QAAQ,KAAK5B,KAAL,CAAWuB,QAAX,GAAsB,CAA9B,CAAtC,CAAV,CAjBkB,CAiBgE;AACnF;;;mCAEe;AACd,UAAIM,UAAU,GAAG,EAAjB;AACA,UAAIC,SAAJ;AACA,WAAK9B,KAAL,CAAWC,UAAX,CAAsBE,MAAtB,KAAiC,EAAjC,GACI2B,SAAS,GAAG,KAAK9B,KAAL,CAAWO,OAAX,CAAmB,KAAKwB,YAAL,CAAkB,CAAlB,EAAqB,KAAK/B,KAAL,CAAWO,OAAX,CAAmByB,MAAxC,CAAnB,CADhB,GAEIF,SAAS,GAAG,KAAK9B,KAAL,CAAWC,UAAX,CAAsBE,MAFtC;;AAGA,WAAK,IAAI8B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtC,IAAI,CAACqC,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AACpC,YAAItC,IAAI,CAACsC,CAAD,CAAJ,CAAQ/B,KAAR,KAAkB4B,SAAtB,EAAiC;AAC/BD,UAAAA,UAAU,CAACK,IAAX,CAAgBD,CAAhB;AACD;AACF;;AACD,UAAIE,SAAS,GAAG,KAAKJ,YAAL,CAAkB,CAAlB,EAAqBF,UAAU,CAACG,MAAhC,CAAhB;AACA,aAAOH,UAAU,CAACM,SAAD,CAAjB;AACD;;;iCAEaC,G,EAAKC,G,EAAK;AACtBD,MAAAA,GAAG,GAAGE,IAAI,CAACC,IAAL,CAAUH,GAAV,CAAN;AACAC,MAAAA,GAAG,GAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAN;AACA,aAAOC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBJ,GAAG,GAAGD,GAAvB,CAAX,IAA0CA,GAAjD;AACD;;;kCAEcpC,K,EAAO0C,O,EAASC,M,EAAQ;AACrC,aAAO;AACLC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AADF,OAAP;AAGD;;;mCAEe;AACd,WAAK7C,KAAL,CAAWM,MAAX,GACI,KAAKgB,QAAL,CAAc;AAAChB,QAAAA,MAAM,EAAE;AAAT,OAAd,CADJ,GAEI,KAAKgB,QAAL,CAAc;AAAChB,QAAAA,MAAM,EAAE;AAAT,OAAd,CAFJ;AAGD;;;6BAES;AAAA;;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAE,KAAKN,KAAL,CAAWyB,QAAX,IAAuB,EAAnC;AACE,QAAA,UAAU,EAAE,KAAKzB,KAAL,CAAWM,MAAX,GAAoBZ,KAAK,CAACoD,MAAN,CAAaC,MAAjC,GAA0CrD,KAAK,CAACoD,MAAN,CAAaE,OADrE;AAEE,QAAA,iBAAiB,EAAE,KAAKnC,WAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAElB,IADR;AAEE,QAAA,OAAO,EAAEC,OAFX;AAGE,QAAA,cAAc,EAAE,KAHlB;AAIE,QAAA,QAAQ,EAAE,KAJZ;AAKE,QAAA,WAAW,EAAE,IALf;AAME,QAAA,eAAe,EAAED,IAAI,CAACqC,MAAL,GAAc,CANjC;AAOE,QAAA,UAAU,EAAE,oBAAChC,KAAD,EAAQ0C,OAAR,EAAiBC,MAAjB,EAAyBM,QAAzB,EAAsC;AAChD,cAAI,OAAOP,OAAP,KAAmB,WAAvB,EAAoC;AAClC,mBAAO;AACLQ,cAAAA,OAAO,EAAE,iBAACC,CAAD,EAAIC,cAAJ,EAAuB;AAC9B,gBAAA,MAAI,CAACvC,WAAL,CAAiB6B,OAAO,CAACW,KAAzB;AACD,eAHI;AAILT,cAAAA,KAAK,EAAE;AACLU,gBAAAA,UAAU,EAAEZ,OAAO,CAACW,KAAR,KAAkB,MAAI,CAACrD,KAAL,CAAWwB,QAA7B,GAAwC,OAAxC,GAAkD,MAAI,CAACxB,KAAL,CAAWQ,QAAX,IAAuB,MAAI,CAACR,KAAL,CAAWS,OAAlC,GAA4C,MAA5C,GAAqD;AAD9G;AAJF,aAAP;AAQD,WATD,MASO;AACL,mBAAO,EAAP;AACD;AACF,SApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EA2BE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAE,CAAC;AACLP,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,UAAX,CAAsBC,KADxB;AAELC,UAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,UAAX,CAAsBE,MAFzB;AAGLE,UAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,UAAX,CAAsBG;AAHxB,SAAD,CADR;AAME,QAAA,OAAO,EAAER,OANX;AAOE,QAAA,eAAe,EAAE,KAAKe,aAPxB;AAQE,QAAA,cAAc,EAAE,KARlB;AASE,QAAA,QAAQ,EAAE,KATZ;AAUE,QAAA,OAAO,EAAE,CAVX;AAWE,QAAA,WAAW,EAAE,IAXf;AAYE,QAAA,KAAK,EAAE;AAAC4C,UAAAA,QAAQ,EAAE,OAAX;AAAoBC,UAAAA,KAAK,EAAE,MAA3B;AAAmCC,UAAAA,eAAe,EAAE,KAAKzD,KAAL,CAAWQ,QAAX,IAAuB,KAAKR,KAAL,CAAWS,OAAlC,GAA4C,MAA5C,GAAqD,QAAzG;AAAmHiD,UAAAA,MAAM,EAAE,CAA3H;AAA8HC,UAAAA,MAAM,EAAE;AAAtI,SAZT;AAaE,QAAA,UAAU,EAAE,oBAAC3D,KAAD,EAAQ0C,OAAR,EAAiBC,MAAjB,EAAyBM,QAAzB,EAAsC;AAChD,iBAAO;AACLC,YAAAA,OAAO,EAAE,iBAACC,CAAD,EAAIC,cAAJ,EAAuB;AAC9B,cAAA,MAAI,CAACtC,YAAL;AACD;AAHI,WAAP;AAKD,SAnBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3BF,CADF;AAmDD;;;;EA9HgBtB,S;;AAiInB,eAAeO,IAAf","sourcesContent":["/* global fetch */\n\nimport React, { Component } from 'react'\nimport ReactTable from 'react-table'\nimport Sound from 'react-sound'\nimport 'react-table/react-table.css'\nimport data from '../data/data'\n\nconst columns = [{\n  Header: 'Input Tag',\n  accessor: 'input'\n}, {\n  Header: 'Output Tag',\n  accessor: 'output'\n}, {\n  Header: 'Audio ID',\n  accessor: 'audio'\n}]\n\nclass Main extends Component {\n  constructor () {\n    super()\n    this.state = {\n      rowContent: {input: '', output: '', id: ''},\n      audio: '',\n      paused: false,\n      tagList: [0, 1, 2, 3, 4, 5], // eventually replace this with yonatan's actual tags\n      flashing: false, // is this the last n seconds of the clip?\n      rowBlue: false,\n      flashingTime: 1 // how many seconds before the end should the bottom bar begin flashing\n    }\n    this.injectThProps = this.injectThProps.bind(this)\n    this.generateSet = this.generateSet.bind(this)\n    this.togglePaused = this.togglePaused.bind(this)\n  }\n\n  componentWillMount () {\n    this.generateSet()\n  }\n\n  generateSet (input) {\n    let nextRow\n    input === undefined\n      ? nextRow = this.getNextIndex()\n      : nextRow = input\n    fetch('http://localhost:3003/audioDuration?id=' + nextRow)\n      .then(res => {\n        res.json()\n          .then(res => {\n            this.setState({\n              duration: res.duration,\n              rowIndex: nextRow,\n              rowContent: {input: data[nextRow].input, output: data[nextRow].output, id: data[nextRow].audio},\n              audioUrl: 'http://localhost:3003/audio?id=' + nextRow\n            })\n          })\n      })\n    setTimeout(() => console.log('1 second later'), 1000 * (this.state.duration - 1)) // change\n  }\n\n  getNextIndex () {\n    let indexArray = []\n    let outputTag\n    this.state.rowContent.output === ''\n      ? outputTag = this.state.tagList[this.getRandomInt(0, this.state.tagList.length)]\n      : outputTag = this.state.rowContent.output\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].input === outputTag) {\n        indexArray.push(i)\n      }\n    }\n    let nextIndex = this.getRandomInt(0, indexArray.length)\n    return indexArray[nextIndex]\n  }\n\n  getRandomInt (min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  injectThProps (state, rowInfo, column) {\n    return {\n      style: { display: 'none' }\n    }\n  }\n\n  togglePaused () {\n    this.state.paused\n      ? this.setState({paused: false})\n      : this.setState({paused: true})\n  }\n\n  render () {\n    return (\n      <div>\n        <Sound url={this.state.audioUrl || ''}\n          playStatus={this.state.paused ? Sound.status.PAUSED : Sound.status.PLAYING}\n          onFinishedPlaying={this.generateSet}\n        />\n        <ReactTable\n          data={data}\n          columns={columns}\n          showPagination={false}\n          sortable={false}\n          loadingText={null}\n          defaultPageSize={data.length + 2}\n          getTdProps={(state, rowInfo, column, instance) => {\n            if (typeof rowInfo !== 'undefined') {\n              return {\n                onClick: (e, handleOriginal) => {\n                  this.generateSet(rowInfo.index)\n                },\n                style: {\n                  background: rowInfo.index !== this.state.rowIndex ? 'white' : this.state.flashing && this.state.rowBlue ? 'blue' : 'yellow'\n                }\n              }\n            } else {\n              return {}\n            }\n          }}\n        />\n        <ReactTable\n          data={[{\n            input: this.state.rowContent.input,\n            output: this.state.rowContent.output,\n            audio: this.state.rowContent.id\n          }]}\n          columns={columns}\n          getTheadThProps={this.injectThProps}\n          showPagination={false}\n          sortable={false}\n          minRows={1}\n          loadingText={null}\n          style={{position: 'fixed', width: '100%', backgroundColor: this.state.flashing && this.state.rowBlue ? 'blue' : 'yellow', bottom: 0, height: 60}}\n          getTdProps={(state, rowInfo, column, instance) => {\n            return {\n              onClick: (e, handleOriginal) => {\n                this.togglePaused()\n              }\n            }\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}