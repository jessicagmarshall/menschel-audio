{"ast":null,"code":"import _classCallCheck from \"/Users/jessicamarshall/Desktop/menschel-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jessicamarshall/Desktop/menschel-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jessicamarshall/Desktop/menschel-fe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jessicamarshall/Desktop/menschel-fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jessicamarshall/Desktop/menschel-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jessicamarshall/Desktop/menschel-fe/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jessicamarshall/Desktop/menschel-fe/src/components/Main.js\";\n\n/* global fetch */\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport Sound from 'react-sound';\nimport 'react-table/react-table.css';\nimport data from '../data/data';\nvar columns = [{\n  Header: 'Input Tag',\n  accessor: 'input'\n}, {\n  Header: 'Output Tag',\n  accessor: 'output'\n}, {\n  Header: 'Audio ID',\n  accessor: 'audio'\n}];\n\nvar Main =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Main, _Component);\n\n  function Main() {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this));\n    _this.state = {\n      rowContent: {\n        input: '',\n        output: '',\n        id: ''\n      },\n      audio: '',\n      paused: false,\n      tagList: [0, 1, 2, 3, 4, 5],\n      // eventually replace this with yonatan's actual tags\n      rowBlue: false,\n      flashingTime: 10,\n      // how many seconds before the end should the bottom bar begin flashing\n      numFlashes: 0,\n      nextRow: ''\n    };\n    _this.injectThProps = _this.injectThProps.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.generateSet = _this.generateSet.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.togglePaused = this.togglePaused.bind(this)\n\n    _this.flashBar = _this.flashBar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.generateSet();\n    }\n  }, {\n    key: \"generateSet\",\n    value: function generateSet(input) {\n      var _this2 = this;\n\n      var nextRow;\n      this.state.rowContent.id === '' ? console.log('randomly generate an input tag for the first audio file') : console.log('end of audio file', this.state.rowContent.id, 'with output tag', this.state.rowContent.output, '.');\n      setTimeout(function () {\n        input === undefined // there is a console.log in this.getNextIndex\n        ? nextRow = this.getNextIndex() : nextRow = input;\n        this.setState({\n          nextRow: nextRow\n        });\n      }.bind(this), 2000);\n      setTimeout(function (nextRow) {\n        console.log(data);\n        console.log('collecting all audio files with input tag', data[this.state.nextRow].input);\n        return nextRow;\n      }.bind(this), 2000);\n      setTimeout(function () {\n        console.log('randomly select audio file', data[nextRow].audio, 'with input tag', data[nextRow].input, 'and fetch it from the server');\n        fetch('http://localhost:3003/audioDuration?id=' + nextRow).then(function (res) {\n          res.json().then(function (res) {\n            setTimeout(function () {\n              console.log('start playing clip', data[nextRow].audio);\n\n              _this2.setState({\n                duration: res.duration,\n                rowIndex: nextRow,\n                rowContent: {\n                  input: data[nextRow].input,\n                  output: data[nextRow].output,\n                  id: data[nextRow].audio\n                },\n                audioUrl: 'http://localhost:3003/audio?id=' + nextRow\n              }); // begin flashing this.state.flashingTime seconds before the end of the sound clip\n\n\n              setTimeout(_this2.flashBar, 1000 * (_this2.state.duration - _this2.state.flashingTime));\n            }, 2000);\n          });\n        });\n      }, 2000);\n    }\n  }, {\n    key: \"getNextIndex\",\n    value: function getNextIndex() {\n      var _this3 = this;\n\n      var indexArray = [];\n      var outputTag;\n      this.state.rowContent.output === '' ? outputTag = this.state.tagList[this.getRandomInt(0, this.state.tagList.length)] : outputTag = this.state.rowContent.output;\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].input === outputTag) {\n          indexArray.push(i);\n        }\n      }\n\n      console.log('choose input tag', outputTag);\n      setTimeout(function () {\n        console.log('list of all audio files with input tag', outputTag);\n\n        var nextIndex = _this3.getRandomInt(0, indexArray.length);\n\n        return indexArray[nextIndex];\n      }, 2000);\n    }\n  }, {\n    key: \"getRandomInt\",\n    value: function getRandomInt(min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n  }, {\n    key: \"injectThProps\",\n    value: function injectThProps(state, rowInfo, column) {\n      return {\n        style: {\n          display: 'none'\n        }\n      };\n    } // togglePaused () {\n    //   this.state.paused\n    //     ? this.setState({paused: false})\n    //     : this.setState({paused: true})\n    // }\n\n  }, {\n    key: \"flashBar\",\n    value: function flashBar() {\n      var _this4 = this;\n\n      this.setState({\n        rowBlue: !this.state.rowBlue,\n        numFlashes: this.state.numFlashes + 1\n      });\n      var flashDuration;\n\n      if (this.state.numFlashes < 35) {\n        this.state.numFlashes < 9 ? flashDuration = this.state.flashingTime / 20 // 8 flashes at 1/20 of the time\n        : this.state.numFlashes < 25 ? flashDuration = this.state.flashingTime / 40 // 16 flashes at 1/40 of the time\n        : flashDuration = this.state.flashingTime / 80; // 10 flashes at 1/80 of the time\n\n        setTimeout(this.flashBar, 1000 * flashDuration);\n      } else {\n        setTimeout(function () {\n          _this4.setState({\n            numFlashes: 0,\n            rowBlue: !_this4.state.rowBlue\n          });\n        }, 1000 * this.state.flashingTime / 80);\n        this.generateSet();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Sound, {\n        url: this.state.audioUrl || '',\n        playStatus: this.state.paused ? Sound.status.PAUSED : Sound.status.PLAYING,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(ReactTable, {\n        data: data,\n        columns: columns,\n        showPagination: false,\n        sortable: false,\n        loadingText: null,\n        defaultPageSize: data.length + 2,\n        getTdProps: function getTdProps(state, rowInfo, column, instance) {\n          if (typeof rowInfo !== 'undefined') {\n            return {\n              onClick: function onClick(e, handleOriginal) {\n                _this5.generateSet(rowInfo.index);\n              },\n              style: {\n                background: rowInfo.index !== _this5.state.rowIndex ? 'white' : _this5.state.rowBlue ? 'purple' : 'yellow',\n                color: rowInfo.index !== _this5.state.rowIndex ? 'black' : _this5.state.rowBlue ? 'white' : 'black'\n              }\n            };\n          } else {\n            return {};\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(ReactTable, {\n        data: [{\n          input: this.state.rowContent.input,\n          output: this.state.rowContent.output,\n          audio: this.state.rowContent.id\n        }],\n        columns: columns,\n        getTheadThProps: this.injectThProps,\n        showPagination: false,\n        sortable: false,\n        minRows: 1,\n        loadingText: null,\n        style: {\n          position: 'fixed',\n          width: '100%',\n          backgroundColor: this.state.rowBlue ? 'purple' : 'yellow',\n          color: this.state.rowBlue ? 'white' : 'black',\n          bottom: 0,\n          height: 60\n        },\n        getTdProps: function getTdProps(state, rowInfo, column, instance) {\n          return {\n            onClick: function onClick(e, handleOriginal) {// this.togglePaused()\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport default Main;","map":{"version":3,"sources":["/Users/jessicamarshall/Desktop/menschel-fe/src/components/Main.js"],"names":["React","Component","ReactTable","Sound","data","columns","Header","accessor","Main","state","rowContent","input","output","id","audio","paused","tagList","rowBlue","flashingTime","numFlashes","nextRow","injectThProps","bind","generateSet","flashBar","console","log","setTimeout","undefined","getNextIndex","setState","fetch","then","res","json","duration","rowIndex","audioUrl","indexArray","outputTag","getRandomInt","length","i","push","nextIndex","min","max","Math","ceil","floor","random","rowInfo","column","style","display","flashDuration","status","PAUSED","PLAYING","instance","onClick","e","handleOriginal","index","background","color","position","width","backgroundColor","bottom","height"],"mappings":"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","sourcesContent":["/* global fetch */\n\nimport React, { Component } from 'react'\nimport ReactTable from 'react-table'\nimport Sound from 'react-sound'\nimport 'react-table/react-table.css'\nimport data from '../data/data'\n\nconst columns = [{\n  Header: 'Input Tag',\n  accessor: 'input'\n}, {\n  Header: 'Output Tag',\n  accessor: 'output'\n}, {\n  Header: 'Audio ID',\n  accessor: 'audio'\n}]\n\nclass Main extends Component {\n  constructor () {\n    super()\n    this.state = {\n      rowContent: {input: '', output: '', id: ''},\n      audio: '',\n      paused: false,\n      tagList: [0, 1, 2, 3, 4, 5], // eventually replace this with yonatan's actual tags\n      rowBlue: false,\n      flashingTime: 10, // how many seconds before the end should the bottom bar begin flashing\n      numFlashes: 0,\n      nextRow: ''\n    }\n    this.injectThProps = this.injectThProps.bind(this)\n    this.generateSet = this.generateSet.bind(this)\n    // this.togglePaused = this.togglePaused.bind(this)\n    this.flashBar = this.flashBar.bind(this)\n  }\n\n  componentWillMount () {\n    this.generateSet()\n  }\n\n  generateSet (input) {\n    let nextRow\n    this.state.rowContent.id === ''\n      ? console.log('randomly generate an input tag for the first audio file')\n      : console.log('end of audio file', this.state.rowContent.id, 'with output tag', this.state.rowContent.output, '.')\n    setTimeout(function () {\n      input === undefined\n        // there is a console.log in this.getNextIndex\n        ? nextRow = this.getNextIndex()\n        : nextRow = input\n      this.setState({nextRow})\n    }.bind(this), 2000)\n    setTimeout(function (nextRow) {\n      console.log(data)\n      console.log('collecting all audio files with input tag', data[this.state.nextRow].input)\n      return nextRow\n    }.bind(this), 2000)\n    setTimeout(() => {\n      console.log('randomly select audio file', data[nextRow].audio, 'with input tag', data[nextRow].input, 'and fetch it from the server')\n      fetch('http://localhost:3003/audioDuration?id=' + nextRow)\n        .then(res => {\n          res.json()\n            .then(res => {\n              setTimeout(() => {\n                console.log('start playing clip', data[nextRow].audio)\n                this.setState({\n                  duration: res.duration,\n                  rowIndex: nextRow,\n                  rowContent: {input: data[nextRow].input, output: data[nextRow].output, id: data[nextRow].audio},\n                  audioUrl: 'http://localhost:3003/audio?id=' + nextRow\n                })\n                // begin flashing this.state.flashingTime seconds before the end of the sound clip\n                setTimeout(this.flashBar, 1000 * (this.state.duration - this.state.flashingTime))\n              }, 2000)\n            })\n        })\n    }, 2000)\n  }\n\n  getNextIndex () {\n    let indexArray = []\n    let outputTag\n    this.state.rowContent.output === ''\n      ? outputTag = this.state.tagList[this.getRandomInt(0, this.state.tagList.length)]\n      : outputTag = this.state.rowContent.output\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].input === outputTag) {\n        indexArray.push(i)\n      }\n    }\n    console.log('choose input tag', outputTag)\n    setTimeout(() => {\n      console.log('list of all audio files with input tag', outputTag)\n      let nextIndex = this.getRandomInt(0, indexArray.length)\n      return indexArray[nextIndex]\n    }, 2000)\n  }\n\n  getRandomInt (min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  injectThProps (state, rowInfo, column) {\n    return {\n      style: { display: 'none' }\n    }\n  }\n\n  // togglePaused () {\n  //   this.state.paused\n  //     ? this.setState({paused: false})\n  //     : this.setState({paused: true})\n  // }\n\n  flashBar () {\n    this.setState({rowBlue: !this.state.rowBlue, numFlashes: this.state.numFlashes + 1})\n    let flashDuration\n    if (this.state.numFlashes < 35) {\n      this.state.numFlashes < 9\n        ? flashDuration = this.state.flashingTime / 20 // 8 flashes at 1/20 of the time\n        : this.state.numFlashes < 25\n          ? flashDuration = this.state.flashingTime / 40 // 16 flashes at 1/40 of the time\n          : flashDuration = this.state.flashingTime / 80 // 10 flashes at 1/80 of the time\n      setTimeout(this.flashBar,\n        1000 * flashDuration\n      )\n    } else {\n      setTimeout(() => {\n        this.setState({numFlashes: 0, rowBlue: !this.state.rowBlue})\n      }, 1000 * this.state.flashingTime / 80)\n      this.generateSet()\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <Sound url={this.state.audioUrl || ''}\n          playStatus={this.state.paused ? Sound.status.PAUSED : Sound.status.PLAYING}\n        />\n        <ReactTable\n          data={data}\n          columns={columns}\n          showPagination={false}\n          sortable={false}\n          loadingText={null}\n          defaultPageSize={data.length + 2}\n          getTdProps={(state, rowInfo, column, instance) => {\n            if (typeof rowInfo !== 'undefined') {\n              return {\n                onClick: (e, handleOriginal) => {\n                  this.generateSet(rowInfo.index)\n                },\n                style: {\n                  background: rowInfo.index !== this.state.rowIndex ? 'white' : this.state.rowBlue ? 'purple' : 'yellow',\n                  color: rowInfo.index !== this.state.rowIndex ? 'black' : this.state.rowBlue ? 'white' : 'black'\n                }\n              }\n            } else {\n              return {}\n            }\n          }}\n        />\n        <ReactTable\n          data={[{\n            input: this.state.rowContent.input,\n            output: this.state.rowContent.output,\n            audio: this.state.rowContent.id\n          }]}\n          columns={columns}\n          getTheadThProps={this.injectThProps}\n          showPagination={false}\n          sortable={false}\n          minRows={1}\n          loadingText={null}\n          style={{\n            position: 'fixed',\n            width: '100%',\n            backgroundColor: this.state.rowBlue ? 'purple' : 'yellow',\n            color: this.state.rowBlue ? 'white' : 'black',\n            bottom: 0,\n            height: 60}}\n          getTdProps={(state, rowInfo, column, instance) => {\n            return {\n              onClick: (e, handleOriginal) => {\n                // this.togglePaused()\n              }\n            }\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}